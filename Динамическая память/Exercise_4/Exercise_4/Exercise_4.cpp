/*Сформируйте динамический одномерный массив целых чисел и заполните его случайными числами от -10 до 15. Пользователь вводит количество элементов массива и, через пробел, начальное значение генератора случайных чисел.

Реализуйте функции:

заполнения массива случайными значениями:   void initArray(int *a, int n);
печать массива через пробел: void printArray(int *a, int n);
добавление элемента в массив с заданной позиции (в функции запрашивается номер позиции, начинающийся с 1, а затем значение элемента): void addElement(int *&a, int &n);
        Например, массив был:  4 6 -2 4 8 5

        Пользователь вводит: 3 10 

        Массив в результате: 4 6 10 -2 4 8 5

        Если вводимая позиция больше размера массива, то элемент добавляется в конец. Если номер позиции меньше 1, то элемент добавляется в начало.

        Например, массив был: 2 6 7 8

        Пользователь вводит:  10 3

        Массив в результате: 2 6 7 8 3

        Если массив был: 1 3 5 7 9

        Пользователь вводит: -5 -6

        Массив в результате:  -6 1 3 5 7 9

удаление элемента в заданной позициии, начиная с 1 (в функции запрашивается номер позиции): void delElement(int *&a, int &n);
       Например, массив был: 3 5 7 8 1

       Пользователь вводит: 4

       Массив в результате: 3 5 7 1

       Если вводимый номер позиции меньше 1 или больше размера массива, то массив остается без изменения.

В функции main() реализовано меню для тестирования этих функций, этот код менять нельзя! Для работы с динамической памятью используйте средства языка С++.

Разберем пример теста: 10 7 1 3 12 3 2 1 3 4

10 - исходное число элементов массива

7 - начальное значение генератора случайных чисел

До цикла меню массив инициализируется и выводится:

15 15 9 15 -1 -1 8 -3 -10 7 

1 - выбор меню: вставка элемента

3 - позиция, в которую вставляется элемент

12 - значение элемента

3 - выбор меню: печать массива. После этого распечатывается измененный массив:

15 15 12 9 15 -1 -1 8 -3 -10 7

2 - выбор меню: удаление элемента

1 - позиция удаляемого элемента

3  - выбор меню: печать массива. После этого распечатывается измененный массив:

15 12 9 15 -1 -1 8 -3 -10 7 

4 - выбор меню: окончание программы.*/
#include <iostream>
#include <cstdlib>

using namespace std;

void initArray(int* ar, int n)
{
    for (int i = 0; i < n; i++)
    {
        ar[i] = rand() % 26 - 10;
    }
}

void printArray(int* ar, int n)
{
    for (int i = 0; i < n; i++)
    {
        cout << ar[i] << " ";
    }
    cout << endl;
}

void addElement(int *&ar, int &n)
{
    int* b = new int[n + 1];
    int x, z, j;

    cin >> x >> z;

    if (x < 1)
    {
        b[0] = z;
        j = 1;
        for (int i = 0; i < n; i++)
        {
            b[j] = ar[i];
            j++;
        }
    }
    else if(x > n)
    {
        j = 0;
        for (int i = 0; i < n; i++)
        {
            b[j] = ar[i];
            j++;
        }
        b[n] = z;
    }
    else
    {
        j = 0;
        for (int i = 0; i < n; i++)
        {
            if (i == x-1)
            {
                b[j] = z;
                j++;
            }
            b[j] = ar[i];
            j++;
        }
    }

    delete[] ar;
    ar = b;
    n++;

    return;
}

void delElement(int *&ar, int &n)
{
    
    int x, z;

    cin >> x;

    if (x < 1 || x > n)
    {
        return;
    }

    int* b = new int[n - 1];

    int j = 0;
    for (int i = 0; i < n; i++)
    {
        if (i == x - 1)
        {
            continue;
        }
        b[j] = ar[i];
        j++;
    }
    
    delete ar;
    ar = b;
    n--;
}

int main() {
    int n, beg;
    cin >> n >> beg;
    srand(beg);
    int* a = NULL;
    a = new int[n];
    initArray(a, n);
    printArray(a, n);
    int k;//выбор пользователя
    while (true) { //бесконечный цикл
        cin >> k;//ввод выбранного варианта
        switch (k) {
        case 1: addElement(a, n); break; //1 - добавление элемента
        case 2: delElement(a, n); break; //2 - удаление элемента
        case 3: printArray(a, n); break; //3 - печать массива
        default: delete[] a; return 0; //другие числа - окончание работы программы
        }
    }
}