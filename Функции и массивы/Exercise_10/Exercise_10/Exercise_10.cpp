/*Напишите функцию sdvig() для  циклического сдвига в одномерном массиве на одну позицию вправо . 
Циклический сдвиг вправо перемещает каждый элемент на следующую позицию. А последний элемент массива перемещается на первое  место. Например, если массив был: 5 7 2 1 9, то после циклического сдвига вправо он будет  9 5 7 2 1.

Напишите также функцию transform(), которая в двумерном массиве для каждой строки выполняет циклический сдвиг вправо на k позиций (число сдвигов k передается в функцию в качестве параметра). 
Используйте первую функцию для реализации данного алгоритма.

Также создайте функции: initMas() для инициализации двумерного массива случайными числами от 1 до 25 и printMas() для вывода массива на консоль построчно в виде таблицы. 
Элементы в строке отделяются знаками табуляции.

В функции main() продемонстрировано использование данных функций: вводится начальное значение генератора случайных чисел и число сдвигов, затем инициализируется двумерный массив, выполняются сдвиги и массив выводится на консоль.

В тестах не предполагается некорректных данных (например, отрицательного количества сдвигов).*/
#include <iostream>
using namespace std;
#define N 4
#define M 6

void initMas(int a[N][M], int R)
{
    for (int i = 0; i < R; i++)
    {
        for (int j = 0; j < M; j++)
        {
           a[i][j] = rand() % 25 + 1;
        }
    }
}

void printMas(int a[N][M], int R)
{

    for (int i = 0; i < R; i++)
    {
        for (int j = 0; j < M; j++)
        {
            cout << a[i][j] << "\t";
        }
        cout << endl;
    }
    return;
}

void sdvig(int a[M])
{
    int tmp = a[M - 1];
    for (int i = M-1; i > 0; i--)
    {
        a[i] = a[i - 1];
    }
    a[0] = tmp;

    return;
}

void transform(int a[N][M], int R, int k)
{
    for (int i = 0; i < R; i++)
    {
        for (int j = 0; j < k; j++)
        {
            sdvig(a[i]);
        }
    }
}

int main() {
    int a[N][M];
    int beg;
    cin >> beg;
    srand(beg);
    int k; //число сдвигов
    cin >> k;
    initMas(a, N);
    cout << "Исходный массив:\n";
    printMas(a, N);
    transform(a, N, k);
    cout << "Преобразованный массив:\n";
    printMas(a, N);
    return 0;
}